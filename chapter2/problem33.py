#Write a function nearly_equal to test whether two strings are nearly equal. Two strings a and b are nearly equal when a can be generated by a single mutation on b.
import sys
def mutate(x,y):
        m = []
        letters = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
#inserting a character
        for i in range(0,len(x)):
                for j in letters:
                        a = x[:i]+j+x[i:]
                        m.append(a)
#deleting a character
        for i in range(0,len(x)):
                a = x[:i]+x[i+1:]
                m.append(a)
#replacing a character
        for i in range(0,len(x)):
                for j in letters:
                        a = x[:i]+j+x[i+1:]
                        m.append(a)
#swapping two consecutive characters
        for i in range(0,len(x)):
                a = x[:i]+x[i+1:i+2]+x[i:i+1]+x[i+2:]
                m.append(a)

        if y in m:
                return "True"
        else: return "False"
def nearly_equal(x,y):
	print mutate(x,y)
nearly_equal(sys.argv[2],sys.argv[1])

